-- MySQL Script generated by MySQL Workbench
-- Thu Oct 17 10:44:33 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema kpezdmc_version1
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema kpezdmc_version1
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `kpezdmc_version1` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `kpezdmc_version1` ;

-- -----------------------------------------------------
-- Table `kpezdmc_version1`.`audit_balance`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kpezdmc_version1`.`audit_balance` (
  `audit_id` INT NOT NULL AUTO_INCREMENT,
  `balance_id` INT NULL DEFAULT NULL,
  `owner_id` INT NULL DEFAULT NULL,
  `plot_id` INT NULL DEFAULT NULL,
  `industry_id` INT NULL DEFAULT NULL,
  `budget_head_id` INT NULL DEFAULT NULL,
  `query_type` VARCHAR(100) NULL DEFAULT NULL,
  `opening_balance` DECIMAL(10,2) NULL DEFAULT NULL,
  `closing_balance` DECIMAL(10,2) NULL DEFAULT NULL,
  `update_time` DATETIME NULL DEFAULT NULL,
  `updated_by` VARCHAR(100) NULL DEFAULT 'SYSTEM',
  `update_reason` VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (`audit_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 532
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `kpezdmc_version1`.`audit_plot_ownership`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kpezdmc_version1`.`audit_plot_ownership` (
  `audit_id` INT NOT NULL AUTO_INCREMENT,
  `plot_ownership_id` INT NOT NULL,
  `plot_id` INT NULL DEFAULT NULL,
  `po_status` VARCHAR(100) NULL DEFAULT NULL,
  `owner_id` INT NULL DEFAULT NULL,
  `start_date` DATE NULL DEFAULT NULL,
  `end_date` DATE NULL DEFAULT NULL,
  `change_type` VARCHAR(10) NULL DEFAULT NULL,
  `new_owner_id` INT NULL DEFAULT NULL,
  `changed_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_by` VARCHAR(255) NULL DEFAULT 'SYSTEM',
  PRIMARY KEY (`audit_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 54
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `kpezdmc_version1`.`balance`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kpezdmc_version1`.`balance` (
  `balance_id` INT NOT NULL AUTO_INCREMENT,
  `owner_id` INT NULL DEFAULT NULL,
  `plot_id` INT NULL DEFAULT NULL,
  `industry_id` INT NULL DEFAULT NULL,
  `budget_head_id` INT NULL DEFAULT NULL,
  `balance` DECIMAL(10,2) NULL DEFAULT NULL,
  `max_balance` DECIMAL(10,2) NULL DEFAULT NULL,
  `update_at` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`balance_id`),
  INDEX `fk_budget_head_id_balance` (`budget_head_id` ASC) VISIBLE,
  INDEX `fk_owner_id_balance` (`owner_id` ASC) VISIBLE,
  INDEX `fk_plot_id_balance` (`plot_id` ASC) VISIBLE,
  INDEX `fk_industry_id_balance` (`industry_id` ASC) VISIBLE,
  CONSTRAINT `fk_budget_head_id_balance`
    FOREIGN KEY (`budget_head_id`)
    REFERENCES `kpezdmc_version1`.`budget_heads` (`budget_head_id`),
  CONSTRAINT `fk_industry_id_balance`
    FOREIGN KEY (`industry_id`)
    REFERENCES `kpezdmc_version1`.`industries` (`Id`),
  CONSTRAINT `fk_owner_id_balance`
    FOREIGN KEY (`owner_id`)
    REFERENCES `kpezdmc_version1`.`ownertable` (`id`),
  CONSTRAINT `fk_plot_id_balance`
    FOREIGN KEY (`plot_id`)
    REFERENCES `kpezdmc_version1`.`plots` (`ID`))
ENGINE = InnoDB
AUTO_INCREMENT = 857
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `kpezdmc_version1`.`budget_heads`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kpezdmc_version1`.`budget_heads` (
  `budget_head_id` INT NOT NULL,
  `budget_head_name` VARCHAR(100) NULL DEFAULT NULL,
  `description` VARCHAR(150) NULL DEFAULT NULL,
  PRIMARY KEY (`budget_head_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `kpezdmc_version1`.`industries`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kpezdmc_version1`.`industries` (
  `Id` INT NOT NULL,
  `Ind_Name` VARCHAR(100) NULL DEFAULT NULL,
  `Ind_Nature` VARCHAR(100) NULL DEFAULT NULL,
  `Ind_Status` VARCHAR(50) NULL DEFAULT NULL,
  `Ind_Mode` VARCHAR(100) NULL DEFAULT NULL,
  `Ind_Type` VARCHAR(100) NULL DEFAULT NULL,
  `Coverd_Area` DECIMAL(10,2) NULL DEFAULT NULL,
  `plot_ID` INT NULL DEFAULT NULL,
  `created_at` DATETIME NULL DEFAULT NULL,
  `updated_at` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`Id`),
  UNIQUE INDEX `unique_plot_id` (`plot_ID` ASC) VISIBLE,
  CONSTRAINT `fk_plot_id_plot_table`
    FOREIGN KEY (`plot_ID`)
    REFERENCES `kpezdmc_version1`.`plots` (`ID`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `kpezdmc_version1`.`industries_audit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kpezdmc_version1`.`industries_audit` (
  `audit_id` INT NOT NULL AUTO_INCREMENT,
  `industry_id` INT NOT NULL,
  `changed_field` VARCHAR(255) NOT NULL,
  `old_value` VARCHAR(255) NULL DEFAULT NULL,
  `new_value` VARCHAR(255) NULL DEFAULT NULL,
  `changed_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `changed_by` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`audit_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 89
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `kpezdmc_version1`.`industry_ownerships`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kpezdmc_version1`.`industry_ownerships` (
  `id` INT NOT NULL,
  `industry_id` INT NOT NULL,
  `owner_id` INT NOT NULL,
  `start_date` DATE NULL DEFAULT NULL,
  `end_date` DATE NULL DEFAULT NULL,
  `i0_status` VARCHAR(100) NULL DEFAULT NULL,
  `created_at` DATETIME NULL DEFAULT NULL,
  `updated_at` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_industry_id_industries_table` (`industry_id` ASC) VISIBLE,
  INDEX `fk_owner_id_owner_table` (`owner_id` ASC) VISIBLE,
  CONSTRAINT `fk_industry_id_industries_table`
    FOREIGN KEY (`industry_id`)
    REFERENCES `kpezdmc_version1`.`industries` (`Id`),
  CONSTRAINT `fk_owner_id_owner_table`
    FOREIGN KEY (`owner_id`)
    REFERENCES `kpezdmc_version1`.`ownertable` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `kpezdmc_version1`.`ownertable`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kpezdmc_version1`.`ownertable` (
  `id` INT NOT NULL,
  `CNIC` VARCHAR(15) NOT NULL,
  `OwnName` VARCHAR(100) NOT NULL,
  `Mobile` VARCHAR(12) NULL DEFAULT NULL,
  `Email` VARCHAR(50) NULL DEFAULT NULL,
  `Address` VARCHAR(255) NULL DEFAULT NULL,
  `created_at` DATETIME NULL DEFAULT NULL,
  `updated_at` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `kpezdmc_version1`.`payments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kpezdmc_version1`.`payments` (
  `id` INT NOT NULL,
  `owner_id` INT NULL DEFAULT NULL,
  `plot_id` INT NULL DEFAULT NULL,
  `industry_id` INT NULL DEFAULT NULL,
  `budget_head_id` INT NULL DEFAULT NULL,
  `amount` DECIMAL(10,2) NULL DEFAULT NULL,
  `payment_date` DATE NULL DEFAULT NULL,
  `created_at` DATETIME NULL DEFAULT NULL,
  `updated_at` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_industry_id_industries_table_py` (`industry_id` ASC) VISIBLE,
  INDEX `fk_owner_id_owner_table_py` (`owner_id` ASC) VISIBLE,
  INDEX `fk_plot_id_plotstable` (`plot_id` ASC) VISIBLE,
  INDEX `fk_budget_head_id` (`budget_head_id` ASC) VISIBLE,
  CONSTRAINT `fk_budget_head_id`
    FOREIGN KEY (`budget_head_id`)
    REFERENCES `kpezdmc_version1`.`budget_heads` (`budget_head_id`),
  CONSTRAINT `fk_industry_id_industries_table_py`
    FOREIGN KEY (`industry_id`)
    REFERENCES `kpezdmc_version1`.`industries` (`Id`),
  CONSTRAINT `fk_owner_id_owner_table_py`
    FOREIGN KEY (`owner_id`)
    REFERENCES `kpezdmc_version1`.`ownertable` (`id`),
  CONSTRAINT `fk_plot_id_plotstable`
    FOREIGN KEY (`plot_id`)
    REFERENCES `kpezdmc_version1`.`plots` (`ID`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `kpezdmc_version1`.`plot_ownership`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kpezdmc_version1`.`plot_ownership` (
  `id` INT NOT NULL,
  `plot_id` INT NOT NULL,
  `owner_id` INT NOT NULL,
  `start_date` DATE NULL DEFAULT NULL,
  `end_date` DATE NULL DEFAULT NULL,
  `po_status` VARCHAR(100) NULL DEFAULT NULL,
  `created_at` DATETIME NULL DEFAULT NULL,
  `updated_at` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_plot_id_plottable` (`plot_id` ASC) VISIBLE,
  INDEX `fk_owner_id_ownertable` (`owner_id` ASC) VISIBLE,
  CONSTRAINT `fk_owner_id_ownertable`
    FOREIGN KEY (`owner_id`)
    REFERENCES `kpezdmc_version1`.`ownertable` (`id`),
  CONSTRAINT `fk_plot_id_plottable`
    FOREIGN KEY (`plot_id`)
    REFERENCES `kpezdmc_version1`.`plots` (`ID`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `kpezdmc_version1`.`plots`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kpezdmc_version1`.`plots` (
  `ID` INT NOT NULL,
  `Plot_Number` VARCHAR(50) NOT NULL,
  `zone` VARCHAR(100) NULL DEFAULT NULL,
  `Location` VARCHAR(255) NULL DEFAULT NULL,
  `Plot_Status` VARCHAR(100) NULL DEFAULT NULL,
  `Land_Type` VARCHAR(50) NULL DEFAULT NULL,
  `Area` DECIMAL(10,2) NULL DEFAULT NULL,
  `price` DOUBLE(15,2) NULL DEFAULT NULL,
  `created_at` DATETIME NULL DEFAULT NULL,
  `updated_at` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

USE `kpezdmc_version1`;

DELIMITER $$
USE `kpezdmc_version1`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `kpezdmc_version1`.`trg_balance_audit_after_insert`
AFTER INSERT ON `kpezdmc_version1`.`balance`
FOR EACH ROW
BEGIN
    INSERT INTO audit_balance (
        balance_id,
        owner_id,
        plot_id,
        industry_id,
        budget_head_id,
        query_type,
        opening_balance,
        closing_balance,
        update_time,
        updated_by,     -- Adjust according to the user making changes (optional)
        update_reason   -- Optional: Reason for the insert
    )
    VALUES (
        NEW.balance_id,                            -- New balance record
        NEW.owner_id,                              -- New owner ID
        NEW.plot_id,                               -- New plot ID
        NEW.industry_id,                           -- New industry ID
        NEW.budget_head_id,                        -- New budget head ID
        'Insert',
        0.00,                                      -- Opening balance is 0 for new insert
        NEW.balance,                               -- Closing balance is the new inserted balance
		NOW(),                                     -- Timestamp of the insert
        'SYSTEM',                                  -- Assuming changes made by system or adjust to user
        'Initial balance record insert'            -- Optional: Specify reason for the insert
    );
END$$

USE `kpezdmc_version1`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `kpezdmc_version1`.`trg_balance_audit_after_update`
AFTER UPDATE ON `kpezdmc_version1`.`balance`
FOR EACH ROW
BEGIN
    INSERT INTO audit_balance (
        balance_id,
        owner_id,
        plot_id,
        industry_id,
        budget_head_id,
        query_type,
        opening_balance,
        closing_balance,
        update_time,
        updated_by,     -- Adjust according to the user making changes (optional)
        update_reason   -- Optional: Reason for the update (if you want to log it)
    )
    VALUES (
        OLD.balance_id,                            -- The balance record being updated
        OLD.owner_id,                              -- Owner ID before the update
        OLD.plot_id,                               -- Plot ID before the update
        OLD.industry_id,                           -- Industry ID before the update
        OLD.budget_head_id,                        -- Budget Head ID before the update
        'Update',
        OLD.balance,                               -- Opening balance (before update)
        NEW.balance,                               -- Closing balance (after update)
        NOW(),                                     -- Timestamp of the update
        'SYSTEM',                                  -- Assuming changes made by system or adjust to user
        'Balance Updated'                          -- Optional: Specify reason for the update
    );
END$$

USE `kpezdmc_version1`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `kpezdmc_version1`.`industries_update_audit`
AFTER UPDATE ON `kpezdmc_version1`.`industries`
FOR EACH ROW
BEGIN
    -- Log changes for status
    IF OLD.ind_status <> NEW.ind_status THEN
        INSERT INTO industries_audit (industry_id, changed_field, old_value, new_value, changed_by)
        VALUES (OLD.id, 'Status', OLD.ind_status, NEW.ind_status, 'system_user'); -- Replace 'system_user' with the actual user value
    END IF;

    -- Log changes for nature
    IF OLD.ind_nature <> NEW.ind_nature THEN
        INSERT INTO industries_audit (industry_id, changed_field, old_value, new_value, changed_by)
        VALUES (OLD.id, 'Nature', OLD.ind_nature, NEW.ind_nature, 'system_user');
    END IF;

    -- Log changes for name
    IF OLD.ind_name <> NEW.ind_name THEN
        INSERT INTO industries_audit (industry_id, changed_field, old_value, new_value, changed_by)
        VALUES (OLD.id, 'Name', OLD.ind_name, NEW.ind_name, 'system_user');
    END IF;


END$$

USE `kpezdmc_version1`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `kpezdmc_version1`.`update_or_insert_balance_after_payment`
AFTER INSERT ON `kpezdmc_version1`.`payments`
FOR EACH ROW
BEGIN
    DECLARE balance_exists INT;
    
    -- Check if the record already exists in the balance table
    SELECT COUNT(*)
    INTO balance_exists
    FROM balance
    WHERE industry_id = NEW.industry_id
    AND budget_head_id = NEW.budget_head_id;
    
    IF balance_exists > 0 THEN
        -- If the balance record exists, update the current_balance
        UPDATE balance
        SET balance = balance - NEW.amount
        WHERE industry_id = NEW.industry_id
        AND budget_head_id = NEW.budget_head_id;
        
    ELSE
        -- If the balance record does not exist, insert a new record
        INSERT INTO balance (owner_id, plot_id, industry_id, budget_head_id, balance, max_balance,update_at)
        VALUES (
            NEW.owner_id,
            NEW.plot_id,
            NEW.industry_id,
            NEW.budget_head_id,
            -NEW.amount, -- Assuming the initial balance will be the negative payment amount
            0, -- Set max_budget as needed, or manage this separately
            NOW()
        );
    END IF;
END$$

USE `kpezdmc_version1`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `kpezdmc_version1`.`after_plot_allotment`
AFTER INSERT ON `kpezdmc_version1`.`plot_ownership`
FOR EACH ROW
BEGIN
    DECLARE plotPrice DECIMAL(15, 2);
    DECLARE budget_headID int;
    

    -- Fetch the price of the plot from the 'Plots' table
    SELECT Price INTO plotPrice FROM Plots WHERE ID = NEW.plot_id;
    Select budget_head_id INTO budget_headID from budget_heads where budget_head_name = "Land Price";
        -- Insert a new balance record if one doesn't exist
        INSERT INTO balance (owner_id,plot_id,budget_head_id,balance,update_at)
        VALUES (NEW.owner_id,NEW.plot_id,budget_headID,plotPrice, NOW());
END$$

USE `kpezdmc_version1`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `kpezdmc_version1`.`before_plot_ownership_insert`
AFTER INSERT ON `kpezdmc_version1`.`plot_ownership`
FOR EACH ROW
BEGIN
    -- Insert old values into audit table
    INSERT INTO audit_plot_ownership (
        plot_ownership_id, plot_id,po_status,owner_id, start_date
    ) 
    VALUES (
        new.id, new.plot_id,'Alloted',new.owner_id, new.start_date
    );
END$$

USE `kpezdmc_version1`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `kpezdmc_version1`.`before_plot_ownership_update`
BEFORE UPDATE ON `kpezdmc_version1`.`plot_ownership`
FOR EACH ROW
BEGIN
    -- Insert old values into audit table
    INSERT INTO audit_plot_ownership (
        plot_ownership_id, plot_id,po_status,owner_id, start_date, end_date, change_type,new_owner_id, updated_by
    ) 
    VALUES (
        OLD.id, OLD.plot_id, OLD.po_status, OLD.owner_id, OLD.start_date, NEW.start_date, 'Transferd', NEW.owner_id, 'SYSTEM'
    );
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
